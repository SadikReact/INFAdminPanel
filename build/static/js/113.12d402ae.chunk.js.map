{"version":3,"sources":["views/pages/authentication/login/LoginJWT.js","views/pages/authentication/login/Login.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["LoginJWT","props","handleSubmitOTP","e","preventDefault","adminId","localStorage","getItem","payload","otp","state","emailotp","axiosConfig","post","then","res","status","setItem","data","token","JSON","stringify","swal","window","location","replace","catch","err","handlechange","setState","target","name","value","handleLogin","email","password","response","ShowScreen","_id","error","showDashBoard","Fragment","CardBody","className","this","containerStyle","inputStyle","onChange","numInputs","renderSeparator","renderInput","Button","onClick","color","Form","onSubmit","FormGroup","Input","type","placeholder","size","Label","icon","label","defaultChecked","handleRemember","required","to","render","history","Ripple","React","Component","connect","values","auth","login","loginWithJWT","Login","activeTab","toggle","tab","Row","Col","sm","xl","lg","md","Card","src","loginImg","alt","width","style","padding","CardHeader","CardTitle","Nav","tabs","NavItem","TabContent","TabPane","tabId","CheckBoxesVuexy","checked","disabled"],"mappings":"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","file":"static/js/113.12d402ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { CardBody, FormGroup, Form, Input, Button, Label } from \"reactstrap\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport Checkbox from \"../../../../components/@vuexy/checkbox/CheckboxesVuexy\";\r\nimport { Mail, Lock, Check } from \"react-feather\";\r\nimport { loginWithJWT } from \"../../../../redux/actions/auth/loginActions\";\r\nimport { connect } from \"react-redux\";\r\nimport { Route } from \"react-router-dom\";\r\nimport OtpInput from \"react-otp-input\";\r\nimport swal from \"sweetalert\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nclass LoginJWT extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      emailotp: \"\",\r\n      ShowScreen: false,\r\n      showDashBoard: false,\r\n    };\r\n  }\r\n\r\n  handleSubmitOTP = async (e) => {\r\n    e.preventDefault();\r\n    let adminId = localStorage.getItem(\"userId\");\r\n    let payload = {\r\n      otp: this.state.emailotp,\r\n    };\r\n    await axiosConfig\r\n      .post(`/admin/varify-otp/${adminId}`, payload)\r\n      .then((res) => {\r\n        if (res.status == 200) {\r\n          localStorage.setItem(\"ad-token\", res.data.token);\r\n          localStorage.setItem(\"AdminData\", JSON.stringify(res.data));\r\n          swal(\"Submittted Successfully\");\r\n          window.location.replace(\"/#\");\r\n        } else if (res.status == 204) {\r\n          swal(\"Something Went wrong\");\r\n        } else {\r\n          swal(\"Something Went wrong\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        swal(\"Invalid OTP\");\r\n      });\r\n  };\r\n  handlechange = (e) => {\r\n    e.preventDefault();\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  handleLogin = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n    axiosConfig\r\n      .post(\"/admin/adminlogin\", payload)\r\n      .then((response) => {\r\n        if (response.status === 200) {\r\n          this.setState({ ShowScreen: true });\r\n          localStorage.setItem(\"userId\", response.data.data._id);\r\n          swal(\"OTP has been sent to Your Mail Id\", \"Please Verify OTP\");\r\n        } else if (response.status === 204 || response.status === 400) {\r\n          swal(\"Some Thing went Wrong\");\r\n        } else {\r\n          swal(\"Some Thing went Wrong\");\r\n        }\r\n      })\r\n\r\n      .catch((error) => {\r\n        swal(\r\n          \"error!\",\r\n          \"Invalied! Please Enter Valid Email. or Password\",\r\n          \"error\"\r\n        );\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardBody className=\"pt-1\">\r\n          {this.state.ShowScreen ? (\r\n            <>\r\n              <OtpInput\r\n                containerStyle=\"true inputdata\"\r\n                inputStyle=\"true inputdataone\"\r\n                className=\"otpinputtype\"\r\n                value={this.state.emailotp}\r\n                name=\"emailotp\"\r\n                onChange={(otp) => this.setState({ emailotp: otp })}\r\n                numInputs={6}\r\n                renderSeparator={<span>-</span>}\r\n                renderInput={(props) => <input className=\"inputs\" {...props} />}\r\n              />\r\n              <div className=\"float-md-right d-block my-2\">\r\n                <Button\r\n                  onClick={this.handleSubmitOTP}\r\n                  color=\"primary\"\r\n                  className=\"px-75 btn-block\"\r\n                >\r\n                  Verify OTP\r\n                </Button>\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Form onSubmit={this.handleLogin}>\r\n                <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                  <Input\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"E-mail \"\r\n                    value={this.state.email}\r\n                    onChange={this.handlechange}\r\n                    // required\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Mail size={15} />\r\n                  </div>\r\n                  <Label>Email </Label>\r\n                </FormGroup>\r\n                <FormGroup className=\"form-label-group position-relative has-icon-left\">\r\n                  <Input\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    value={this.state.password}\r\n                    onChange={this.handlechange}\r\n                    // required\r\n                  />\r\n                  <div className=\"form-control-position\">\r\n                    <Lock size={15} />\r\n                  </div>\r\n                  <Label>Password</Label>\r\n                </FormGroup>\r\n                <FormGroup className=\"d-flex justify-content-between align-items-center\">\r\n                  <Checkbox\r\n                    color=\"primary\"\r\n                    icon={<Check className=\"vx-icon\" size={16} />}\r\n                    label=\"Remember me\"\r\n                    defaultChecked={false}\r\n                    onChange={this.handleRemember}\r\n                    required\r\n                  />\r\n                  <div className=\"float-right\">\r\n                    <Link to=\"/pages/forgot-password\">Forgot Password?</Link>\r\n                  </div>\r\n                </FormGroup>\r\n                <div className=\"d-flex justify-content-between\">\r\n                  <Route\r\n                    render={({ history }) => (\r\n                      <Button.Ripple color=\"primary\" type=\"submit\">\r\n                        Login\r\n                      </Button.Ripple>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </Form>\r\n            </>\r\n          )}\r\n        </CardBody>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    values: state.auth.login,\r\n  };\r\n};\r\nexport default connect(mapStateToProps, { loginWithJWT })(LoginJWT);\r\n","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Nav,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n} from \"reactstrap\";\r\n// import loginImg from \"../../../../assets/img/pages/login.png\";\r\nimport loginImg from \"../../../../assets/img/logo/inf-logo.png\";\r\nimport \"../../../../assets/scss/pages/authentication.scss\";\r\nimport LoginJWT from \"./LoginJWT\";\r\n\r\nclass Login extends React.Component {\r\n  state = {\r\n    activeTab: \"1\",\r\n  };\r\n  toggle = (tab) => {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Row className=\"m-0 justify-content-center\">\r\n        <Col\r\n          sm=\"8\"\r\n          xl=\"7\"\r\n          lg=\"10\"\r\n          md=\"8\"\r\n          className=\"d-flex justify-content-center\"\r\n        >\r\n          <Card className=\"bg-authentication login-card rounded-0 mb-0 w-100\">\r\n            <Row className=\"m-0\">\r\n              <Col\r\n                lg=\"6\"\r\n                className=\"d-lg-block d-none text-center align-self-center px-1 py-0\"\r\n              >\r\n                <img\r\n                  src={loginImg}\r\n                  alt=\"loginImg\"\r\n                  width=\"100%\"\r\n                  style={{ padding: \"50px 50px\" }}\r\n                />\r\n              </Col>\r\n              <Col lg=\"6\" md=\"12\" className=\"p-0\">\r\n                <Card className=\"rounded-0 mb-0 px-2 login-tabs-container\">\r\n                  <CardHeader className=\"pb-1\">\r\n                    <CardTitle>\r\n                      <h4 className=\"mb-0\">Login</h4>\r\n                    </CardTitle>\r\n                  </CardHeader>\r\n                  <p className=\"px-2 auth-title\">\r\n                    Welcome back, please login to your INF Plan account.\r\n                  </p>\r\n                  <Nav tabs className=\"px-2\">\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"1\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"1\");\r\n                        }}\r\n                      >\r\n                        JWT\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"2\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"2\");\r\n                        }}\r\n                      >\r\n                        Firebase\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                    <NavItem>\r\n                      {/* <NavLink\r\n                        className={classnames({\r\n                          active: this.state.activeTab === \"3\",\r\n                        })}\r\n                        onClick={() => {\r\n                          this.toggle(\"3\");\r\n                        }}\r\n                      >\r\n                        Auth0\r\n                      </NavLink> */}\r\n                    </NavItem>\r\n                  </Nav>\r\n                  <TabContent activeTab={this.state.activeTab}>\r\n                    <TabPane tabId=\"1\">\r\n                      <LoginJWT />\r\n                    </TabPane>\r\n                    <TabPane tabId=\"2\">{/* <LoginFirebase /> */}</TabPane>\r\n                    <TabPane tabId=\"3\">{/* <LoginAuth0 /> */}</TabPane>\r\n                  </TabContent>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n","import React from \"react\"\r\nclass CheckBoxesVuexy extends React.Component {\r\n  render() {\r\n    return (\r\n      <div\r\n        className={`vx-checkbox-con ${\r\n          this.props.className ? this.props.className : \"\"\r\n        } vx-checkbox-${this.props.color}`}\r\n      >\r\n        <input\r\n          type=\"checkbox\"\r\n          defaultChecked={this.props.defaultChecked}\r\n          checked={this.props.checked}\r\n          value={this.props.value}\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick ? this.props.onClick : null}\r\n          onChange={this.props.onChange ? this.props.onChange : null}\r\n        />\r\n        <span\r\n          className={`vx-checkbox vx-checkbox-${\r\n            this.props.size ? this.props.size : \"md\"\r\n          }`}\r\n        >\r\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\r\n        </span>\r\n        <span>{this.props.label}</span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CheckBoxesVuexy\r\n"],"sourceRoot":""}