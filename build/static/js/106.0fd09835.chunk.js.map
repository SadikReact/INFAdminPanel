{"version":3,"sources":["../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx","views/apps/plans/AddPlan.js","../node_modules/reactstrap/es/FormGroup.js"],"names":["module","exports","require","css","ref","insertAt","document","head","getElementsByTagName","style","createElement","type","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","close","cancel","OutsideAlerter","props","clickEvent","wrapperRef","useRef","outsideClick","useEffect","handleClickOutside","event","current","contains","target","addEventListener","removeEventListener","React","children","Multiselect","c","_this","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","searchWrapper","createRef","searchBox","onChange","bind","onKeyPress","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","onCloseOptionList","isVisible","initialSetValue","this","groupBy","singleSelect","groupByOptions","_proto","Promise","resolve","_this2","setState","length","componentDidMount","componentDidUpdate","prevProps","prevSelectedvalues","JSON","stringify","focus","componentWillUnmount","clearTimeout","skipCheck","isObject","displayValue","l","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","push","create","onSearch","value","onKeyPressFn","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","e","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","renderOptionList","emptyRecordMsg","loadingMessage","o","loading","className","optionContainer","notFound","keys","map","Fragment","obj","groupHeading","option","isSelected","_this6","onClick","readOnly","checked","optionValueDecorator","_this7","customCloseIcon","_this8","chips","selectedValueDecorator","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","_this9","placeholder","id","name","hidePlaceholder","disable","showArrow","customArrow","multiselectContainer","hideSelectedList","onKeyDown","inputField","autoComplete","disabled","onMouseDown","preventDefault","render","Component","defaultProps","AddFnoOption","changeHandler1","status","PlanBenefitsList","axiosConfig","get","then","response","planBenefitsList","data","Benefite","AllPolicyList","policyList","changeHandler","handlePlanBenefits","console","log","submitHandler","payload","planMinDays","planType","agesupportMin","agesupportMax","planMaximum","planDeductible","preexCoverage","preexMaxCoverage","CoverageCntry","planBenefitsCode_fk","preexDeductible","policy_ID_fk","post","swal","history","catch","error","policy_combination_active","selectedValue","list","selectedList","selectedItem","removedItem","sm","listTag","href","tag","active","col-sm-6","onSubmit","lg","md","for","defaultValue","required","val","_id","policyName","planBenefitsCode","Ripple","color","_excluded","propTypes","PropTypes","node","row","bool","check","inline","tagPropType","string","cssModule","object","FormGroup","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","_extends"],"mappings":"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","file":"static/js/106.0fd09835.chunk.js","sourcesContent":["\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React, { useRef, useEffect } from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport {IMultiselectProps} from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nfunction useOutsideAlerter(ref, clickEvent) {\n  useEffect(() => {\n      function handleClickOutside(event) {\n          if (ref.current && !ref.current.contains(event.target)) {\n            clickEvent();\n          }\n      }\n\n      document.addEventListener(\"mousedown\", handleClickOutside);\n      return () => {\n          document.removeEventListener(\"mousedown\", handleClickOutside);\n      };\n  }, [ref]);\n}\n\n/**\n* Component that alerts if you click outside of it\n*/\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef, props.outsideClick);\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: IMultiselectProps;\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onKeyPress = this.onKeyPress.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.onCloseOptionList = this.onCloseOptionList.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t}\n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n\n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  onKeyPress(event) {\n    const { onKeyPressFn } = this.props;\n    if (onKeyPressFn) {\n        onKeyPressFn(event, event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => {\n            const isSelected = this.isSelectedValue(option);\n            return (\n              <li\n                key={`option${i}`}\n                style={style['option']}\n                className={`groupChildEle option ${isSelected ? 'selected' : ''} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n                onClick={() => this.onSelectItem(option)}\n              >\n                {showCheckbox && !singleSelect && (\n                    <input\n                      type=\"checkbox\"\n                      className={'checkbox'}\n                      readOnly\n                      checked={isSelected}\n                    />\n                )}\n                {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n              </li>\n            )}\n          )}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => {\n        const isSelected = this.isSelectedValue(option);\n        return (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`option ${isSelected ? 'selected' : ''} ${highlightOption === i ? `highlightOption highlight` : \"\"} ${this.fadeOutSelection(option) ? 'disableSelection' : ''} ${this.isDisablePreSelectedValues(option) ? 'disableSelection' : ''}`}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={isSelected}\n              />\n            )}\n            {this.props.optionValueDecorator(isObject ? option[displayValue] : (option || '').toString(), option)}\n          </li>\n      )\n    });\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {this.props.selectedValueDecorator(!isObject ? (value || '').toString() : value[displayValue], value)}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onCloseOptionList() {\n    this.setState({\n      toggleOptionsList: false,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0,\n      inputValue: ''\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    this.setState({ inputValue: '' }, this.filterOptionsByInput);\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.onCloseOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, name, hidePlaceholder, disable, showArrow, className, customArrow, hideSelectedList } = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''} ${className || ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`}\n          ref={this.searchWrapper} style={style['searchBox']}\n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {!hideSelectedList && this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className={`searchBox ${singleSelect && selectedValues.length ? 'display-none' : ''}`}\n            id={`${id || 'search'}_input`}\n\t          name={`${name || 'search_name'}_input`}\n            onChange={this.onChange}\n            onKeyPress={this.onKeyPress}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && (\n            <>\n              {customArrow ? <span className=\"icon_down_dir\">{customArrow}</span> : <img src={DownArrow} className={`icon_cancel icon_down_dir`} />}\n            </>\n          )}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n          onMouseDown={(e) => {\n            e.preventDefault();\n          }}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <OutsideAlerter outsideClick={this.onCloseOptionList}>\n        {this.renderMultiselectContainer()}\n      </OutsideAlerter>\n    );\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  onKeyPressFn: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  name: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: '',\n  className: '',\n  customArrow: undefined,\n  selectedValueDecorator: v => v,\n  optionValueDecorator: v => v\n} as IMultiselectProps;\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  FormGroup,\r\n} from \"reactstrap\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\nimport { history } from \"../../../history\";\r\nimport swal from \"sweetalert\";\r\nimport { Route } from \"react-router-dom\";\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\n\r\nexport default class AddFnoOption extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      planMinDays: \"\",\r\n      planType: [],\r\n      agesupportMin: null,\r\n      agesupportMax: null,\r\n      planMaximum: \"\",\r\n      planDeductible: \"\",\r\n      preexCoverage: \"\",\r\n      preexDeductible: \"\",\r\n      preexMaxCoverage: null,\r\n      CoverageCntry: \"\",\r\n      policy_combination_active: \"\",\r\n      selectedValue: \"\",\r\n      list: [{ name: \"BASIC\" }, { name: \"PRE-EX\" }],\r\n      planBenefitsCode_fk: \"\",\r\n      policy_ID_fk: \"\",\r\n      planBenefitsList: [],\r\n      policyList: [],\r\n    };\r\n    this.onSelect = this.onSelect.bind(this);\r\n    this.onRemove = this.onRemove.bind(this);\r\n  }\r\n  changeHandler1 = (e) => {\r\n    this.setState({ status: e.target.value });\r\n  };\r\n  componentDidMount() {\r\n    this.PlanBenefitsList();\r\n    this.AllPolicyList();\r\n  }\r\n\r\n  PlanBenefitsList = () => {\r\n    axiosConfig.get(\"/benefite/view-benefite\").then((response) => {\r\n      this.setState({ planBenefitsList: response.data.Benefite });\r\n    });\r\n  };\r\n  AllPolicyList = () => {\r\n    axiosConfig.get(\"/admin/get_policies\").then((response) => {\r\n      this.setState({ policyList: response.data.data });\r\n    });\r\n  };\r\n  changeHandler = (e) => {\r\n    // console.log([e.target.name], e.target.value);\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSelect(selectedList, selectedItem) {\r\n    console.log(selectedList);\r\n    this.setState({ planType: selectedList });\r\n  }\r\n  handlePlanBenefits = (e) => {\r\n    const { name, value } = e.target;\r\n    console.log(value);\r\n    this.setState({ [name]: value });\r\n  };\r\n  onRemove(selectedList, removedItem) {\r\n    console.log(selectedList);\r\n    this.setState({ planType: selectedList });\r\n  }\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      planMinDays: this.state.planMinDays,\r\n      planType: this.state.planType,\r\n      agesupportMin: this.state.agesupportMin,\r\n      agesupportMax: this.state.agesupportMax,\r\n      planMaximum: this.state.planMaximum,\r\n      planDeductible: this.state.planDeductible,\r\n      preexCoverage: this.state.preexCoverage,\r\n      preexMaxCoverage: this.state.preexMaxCoverage,\r\n      CoverageCntry: this.state.CoverageCntry,\r\n      planBenefitsCode_fk: this.state.planBenefitsCode_fk,\r\n      preexDeductible: this.state.preexDeductible,\r\n      // policy_combination_active: this.state.preexCoverage,\r\n      policy_ID_fk: this.state.policy_ID_fk,\r\n    };\r\n    axiosConfig\r\n      .post(\"/plan/save-plan\", payload)\r\n      .then((response) => {\r\n        swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n        this.props.history.push(\"/app/plans/PlanList\");\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row>\r\n          <Col sm=\"12\">\r\n            <div>\r\n              <Breadcrumb listTag=\"div\">\r\n                <BreadcrumbItem href=\"/analyticsDashboard\" tag=\"a\">\r\n                  Home\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem href=\"\" tag=\"a\">\r\n                  Plan List\r\n                </BreadcrumbItem>\r\n                <BreadcrumbItem active>Add Plan</BreadcrumbItem>\r\n              </Breadcrumb>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Card>\r\n          <Row className=\"m-2\">\r\n            <Col>\r\n              <h1 col-sm-6 className=\"float-left\">\r\n                Add Plan\r\n              </h1>\r\n            </Col>\r\n            <Col>\r\n              <Route\r\n                render={({ history }) => (\r\n                  <Button\r\n                    className=\" btn btn-danger float-right\"\r\n                    onClick={() => history.push(\"/app/plans/PlanList\")}\r\n                  >\r\n                    Back\r\n                  </Button>\r\n                )}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <CardBody>\r\n            <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanMinDays</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"planMinDays\"\r\n                      value={this.state.planMinDays}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PlanMinDays\r\n                      </option>\r\n                      <option value=\"5\">5</option>\r\n                      <option value=\"15\">15</option>\r\n                      <option value=\"30\">30</option>\r\n                      <option value=\"60\">60</option>\r\n                      <option value=\"90\">90</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col className=\"\" lg=\"6\" md=\"6\" sm=\"12\">\r\n                  <Label for=\"data-category\">Plan Type</Label>\r\n                  <Multiselect\r\n                    options={this.state.list}\r\n                    selectedValues={this.state.selectedValue}\r\n                    onSelect={this.onSelect}\r\n                    onRemove={this.onRemove}\r\n                    displayValue=\"name\"\r\n                  />\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>AgesupportMin</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"agesupportMin\"\r\n                    placeholder=\"AgesupportMin\"\r\n                    value={this.state.agesupportMin}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>AgesupportMax</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"agesupportMax\"\r\n                    placeholder=\"AgesupportMax\"\r\n                    value={this.state.agesupportMax}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>planMaximum</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"planMaximum\"\r\n                    placeholder=\"planMaximum\"\r\n                    value={this.state.planMaximum}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanDeductible</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"planDeductible\"\r\n                      value={this.state.planDeductible}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select planDeductible\r\n                      </option>\r\n                      <option value=\"0\">0</option>\r\n                      <option value=\"50\">50</option>\r\n                      <option value=\"75\">75</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"250\">250</option>\r\n                      <option value=\"500\">500</option>\r\n                      <option value=\"1000\">1000</option>\r\n                      <option value=\"2500\">2500</option>\r\n                      <option value=\"5000\">5000</option>\r\n                      <option value=\"10000\">10000</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PreexCoverage</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"preexCoverage\"\r\n                      value={this.state.preexCoverage}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option value=\"\" disabled>\r\n                        Select PreexCoverage\r\n                      </option>\r\n                      <option value=\"NO\">NO</option>\r\n                      <option value=\"YES\">YES</option>\r\n                      <option value=\"ACUTE\">ACUTE</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">Policy</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"policy_ID_fk\"\r\n                      value={this.state.policy_ID_fk}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select Policy\r\n                      </option>\r\n                      {this.state.policyList?.map((val) => {\r\n                        return (\r\n                          <option value={val?._id}>{val?.policyName}</option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PlanBenefits </Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"planBenefitsCode_fk\"\r\n                      value={this.state.planBenefitsCode_fk}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PlanBenefit\r\n                      </option>\r\n                      {this.state.planBenefitsList?.map((val) => {\r\n                        return (\r\n                          <option value={val?._id}>\r\n                            {val?.planBenefitsCode}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"12\" className=\"\">\r\n                  <Label for=\"data-category\">PreexDeductible</Label>\r\n                  <FormGroup>\r\n                    <Input\r\n                      type=\"select\"\r\n                      id=\"data-category\"\r\n                      name=\"preexDeductible\"\r\n                      value={this.state.preexDeductible}\r\n                      onChange={this.handlePlanBenefits}\r\n                      defaultValue=\"\"\r\n                    >\r\n                      <option disabled value=\"\">\r\n                        Select PreexDeductible\r\n                      </option>\r\n                      <option value=\"0\">0</option>\r\n                      <option value=\"75\">75</option>\r\n                      <option value=\"100\">100</option>\r\n                      <option value=\"250\">250</option>\r\n                      <option value=\"500\">500</option>\r\n                      <option value=\"750\">750</option>\r\n                      <option value=\"1000\">1000</option>\r\n                      <option value=\"1500\">1500</option>\r\n                      <option value=\"2000\">2000</option>\r\n                      <option value=\"2500\">2500</option>\r\n                      <option value=\"5000\">5000</option>\r\n                      <option value=\"10000\">10000</option>\r\n                    </Input>\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>PreexMaxCoverage</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"preexMaxCoverage\"\r\n                    placeholder=\"preexMaxCoverage\"\r\n                    value={this.state.preexMaxCoverage}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Label>CoverageCntry</Label>\r\n                  <Input\r\n                    required\r\n                    type=\"number\"\r\n                    name=\"CoverageCntry\"\r\n                    placeholder=\"CoverageCntry\"\r\n                    value={this.state.CoverageCntry}\r\n                    onChange={this.changeHandler}\r\n                  ></Input>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n                  <Button.Ripple\r\n                    color=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"mr-1 mb-1\"\r\n                  >\r\n                    Add Plan\r\n                  </Button.Ripple>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </CardBody>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nvar _excluded = [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"];\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, _excluded);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;"],"sourceRoot":""}