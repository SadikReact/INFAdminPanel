{"version":3,"sources":["views/apps/pageSetUp/about/EditAboutUs.js","../node_modules/draftjs-to-html/lib/draftjs-to-html.js"],"names":["EditAboutUs","props","onEditorStateChange","editorState","setState","submitHandler","e","preventDefault","id","match","params","desc","draftToHtml","convertToRaw","state","getCurrentContent","axiosConfig","post","then","response","console","log","swal","history","push","catch","error","EditorState","createEmpty","this","get","contentBlocks","convertFromHTML","data","contentState","ContentState","createFromBlockArray","createWithContent","Component","module","exports","forEach","obj","callback","key","hasOwnProperty","call","blockTypesMapping","unstyled","blockquote","code","getBlockTag","type","getBlockStyle","styles","value","concat","getStylesAtOffset","inlineStyles","offset","COLOR","BGCOLOR","FONTSIZE","FONTFAMILY","UNDERLINE","ITALIC","BOLD","STRIKETHROUGH","CODE","SUBSCRIPT","SUPERSCRIPT","sameStyleAsPrevious","index","sameStyled","length","style","getEntityMarkup","entityMap","entityKey","text","customEntityTransform","entity","html","url","targetOption","alignment","src","alt","height","width","getInlineStyleSections","block","start","end","styleSections","Array","from","section","inlineStyleRanges","range","i","indexOf","substring","getStyleArrayForBlock","getInlineStyleSectionMarkup","styleSection","styleTagSections","styleSectionText","stylePropertySection","content","map","ch","join","getSectionText","addInlineStyleMarkup","getStyleTagSectionMarkup","styleString","test","addStylePropertyMarkup","getBlockInnerMarkup","hashtagConfig","blockMarkup","sections","lastOffset","sectionRanges","entityRanges","blockText","counter","startIndex","trigger","separator","substr","endIndex","hashtag","getHashtagRanges","sort","s1","s2","r","getSections","sectionText","entityInlineMarkup","undefined","getSectionMarkup","replacedText","replace","trimLeadingZeros","trimTrailingZeros","getListMarkup","listBlocks","directional","previousBlock","listHtml","nestedListBlock","nestedBlock","depth","blockStyle","editorContent","blocks","blockType","blockHtml","str","trim","isAtomicEntityBlock","blockTag","getBlockMarkup","factory"],"mappings":"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","file":"static/js/212.46d22810.chunk.js","sourcesContent":["// import React, { Component } from \"react\";\r\n// import {\r\n//   Card,\r\n//   CardBody,\r\n//   Row,\r\n//   Col,\r\n//   Form,\r\n//   Label,\r\n//   Input,\r\n//   Button,\r\n//   Breadcrumb,\r\n//   BreadcrumbItem,\r\n// } from \"reactstrap\";\r\n// // import swal from \"sweetalert\";\r\n// import ReactHtmlParser from \"react-html-parser\";\r\n// import { Route } from \"react-router-dom\";\r\n// import axiosConfig from \"../../../../axiosConfig\";\r\n// import { EditorState, convertToRaw } from \"draft-js\";\r\n// import { Editor } from \"react-draft-wysiwyg\";\r\n// import draftToHtml from \"draftjs-to-html\";\r\n// import \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\n// import \"../../../../assets/scss/plugins/extensions/editor.scss\";\r\n// import swal from \"sweetalert\";\r\n// export default class EditAboutUs extends Component {\r\n//   constructor(props) {\r\n//     super(props);\r\n\r\n//     this.state = {\r\n//       dealer: \"\",\r\n//       desc: \"\",\r\n//       editorState: EditorState.createEmpty(),\r\n//     };\r\n//   }\r\n//   componentDidMount() {\r\n//     let { id } = this.props.match.params;\r\n//     axiosConfig\r\n//       .get(`/admin/getone_aboutus/${id}`)\r\n//       .then((response) => {\r\n//         console.log(response.data.data.desc);\r\n//         this.setState({\r\n//           desc: response.data.data.desc,\r\n//         });\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response);\r\n//       });\r\n//   }\r\n//   onEditorStateChange = (editorState) => {\r\n//     this.setState({\r\n//       editorState,\r\n//       desc: draftToHtml(convertToRaw(editorState.getCurrentContent())),\r\n//     });\r\n//   };\r\n//   changeHandler = (e) => {\r\n//     this.setState({ [e.target.name]: e.target.value });\r\n//   };\r\n//   submitHandler = (e) => {\r\n//     e.preventDefault();\r\n//     let { id } = this.props.match.params;\r\n//     axiosConfig\r\n//       .post(`/admin/edit_aboutus/${id}`, this.state)\r\n//       .then((response) => {\r\n//         console.log(response);\r\n//         swal(\"Success!\", \"Submitted SuccessFull!\", \"success\");\r\n//         this.props.history.push(`/app/pageSetUp/about/AllaboutUs`);\r\n//       })\r\n//       .catch((error) => {\r\n//         console.log(error.response);\r\n//       });\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <div>\r\n//         <Row>\r\n//           <Col sm=\"12\">\r\n//             <div>\r\n//               <Breadcrumb listTag=\"div\">\r\n//                 <BreadcrumbItem href=\"/\" tag=\"a\">\r\n//                   Home\r\n//                 </BreadcrumbItem>\r\n//                 <BreadcrumbItem active>Edit About Us</BreadcrumbItem>\r\n//               </Breadcrumb>\r\n//             </div>\r\n//           </Col>\r\n//         </Row>\r\n//         <Card>\r\n//           <Row className=\"m-2\">\r\n//             <Col>\r\n//               {/* <span>{ReactHtmlParser(params.data.desc)}</span> */}\r\n//               <h1 col-sm-6 className=\"float-left\">\r\n//                 Edit AboutUs\r\n//               </h1>\r\n//             </Col>\r\n//             <Col>\r\n//               <Route\r\n//                 render={({ history }) => (\r\n//                   <Button\r\n//                     className=\" btn btn-danger float-right\"\r\n//                     onClick={() =>\r\n//                       history.push(\"/app/pageSetUp/about/AllaboutUs\")\r\n//                     }\r\n//                   >\r\n//                     Back\r\n//                   </Button>\r\n//                 )}\r\n//               />\r\n//             </Col>\r\n//           </Row>\r\n//           <CardBody>\r\n//             <Form className=\"m-1\" onSubmit={this.submitHandler}>\r\n//               <Col lg=\"6\" md=\"6\" sm=\"6\" className=\"mb-2\">\r\n//                 <Label>Descripition</Label>\r\n//                 <Editor\r\n//                   toolbarClassName=\"demo-toolbar-absolute\"\r\n//                   wrapperClassName=\"demo-wrapper\"\r\n//                   editorClassName=\"demo-editor\"\r\n//                   editorState={this.state.editorState}\r\n//                   onEditorStateChange={this.onEditorStateChange}\r\n//                   toolbar={{\r\n//                     options: [\"inline\", \"blockType\", \"fontSize\", \"fontFamily\"],\r\n//                     inline: {\r\n//                       options: [\r\n//                         \"bold\",\r\n//                         \"italic\",\r\n//                         \"underline\",\r\n//                         \"strikethrough\",\r\n//                         \"monospace\",\r\n//                       ],\r\n//                       bold: { className: \"bordered-option-classname\" },\r\n//                       italic: { className: \"bordered-option-classname\" },\r\n//                       underline: { className: \"bordered-option-classname\" },\r\n//                       strikethrough: {\r\n//                         className: \"bordered-option-classname\",\r\n//                       },\r\n//                       code: { className: \"bordered-option-classname\" },\r\n//                     },\r\n//                     blockType: {\r\n//                       className: \"bordered-option-classname\",\r\n//                     },\r\n//                     fontSize: {\r\n//                       className: \"bordered-option-classname\",\r\n//                     },\r\n//                     fontFamily: {\r\n//                       className: \"bordered-option-classname\",\r\n//                     },\r\n//                   }}\r\n//                 />\r\n//               </Col>\r\n//               <Row>\r\n//                 <Col\r\n//                   lg=\"6\"\r\n//                   md=\"6\"\r\n//                   sm=\"6\"\r\n//                   className=\"mb-2\"\r\n//                   style={{ marginLeft: \"15px\" }}\r\n//                 >\r\n//                   <Button.Ripple\r\n//                     color=\"primary\"\r\n//                     type=\"submit\"\r\n//                     className=\"mr-1 mb-1\"\r\n//                   >\r\n//                     Update AboutUs\r\n//                   </Button.Ripple>\r\n//                 </Col>\r\n//               </Row>\r\n//             </Form>\r\n//           </CardBody>\r\n//         </Card>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\nimport React, { Component } from \"react\";\r\nimport { Editor } from \"react-draft-wysiwyg\";\r\nimport {\r\n  EditorState,\r\n  convertFromHTML,\r\n  ContentState,\r\n  convertToRaw,\r\n} from \"draft-js\";\r\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\";\r\nimport draftToHtml from \"draftjs-to-html\";\r\nimport axiosConfig from \"../../../../axiosConfig\";\r\nimport swal from \"sweetalert\";\r\n\r\nclass EditAboutUs extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      editorState: EditorState.createEmpty(),\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let { id } = this.props.match.params;\r\n    axiosConfig\r\n      .get(`/admin/getone_aboutus/${id}`)\r\n      .then((response) => {\r\n        const contentBlocks = convertFromHTML(response.data.data.desc);\r\n        if (contentBlocks.contentBlocks !== null) {\r\n          const contentState = ContentState.createFromBlockArray(\r\n            contentBlocks.contentBlocks\r\n          );\r\n          const editorState = EditorState.createWithContent(contentState);\r\n          this.setState({\r\n            editorState,\r\n          });\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({ editorState });\r\n  };\r\n\r\n  submitHandler = (e) => {\r\n    e.preventDefault();\r\n    let { id } = this.props.match.params;\r\n    const desc = draftToHtml(\r\n      convertToRaw(this.state.editorState.getCurrentContent())\r\n    );\r\n    axiosConfig\r\n      .post(`/admin/edit_aboutus/${id}`, { desc })\r\n      .then((response) => {\r\n        console.log(response);\r\n        swal(\"Success!\", \"Submitted Successfully!\", \"success\");\r\n        this.props.history.push(`/app/pageSetUp/about/AllaboutUs`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error.response);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Your existing code remains the same */}\r\n        <Editor\r\n          editorState={this.state.editorState}\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n        {/* Your remaining form and button elements */}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditAboutUs;\r\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = global || self, global.draftjsToHtml = factory());\n}(this, (function () { 'use strict';\n\n  /**\n  * Utility function to execute callback for eack key->value pair.\n  */\n  function forEach(obj, callback) {\n    if (obj) {\n      for (var key in obj) {\n        // eslint-disable-line no-restricted-syntax\n        if ({}.hasOwnProperty.call(obj, key)) {\n          callback(key, obj[key]);\n        }\n      }\n    }\n  }\n  /**\n  * The function returns true if the string passed to it has no content.\n  */\n\n  function isEmptyString(str) {\n    if (str === undefined || str === null || str.length === 0 || str.trim().length === 0) {\n      return true;\n    }\n\n    return false;\n  }\n\n  /**\n  * Mapping block-type to corresponding html tag.\n  */\n\n  var blockTypesMapping = {\n    unstyled: 'p',\n    'header-one': 'h1',\n    'header-two': 'h2',\n    'header-three': 'h3',\n    'header-four': 'h4',\n    'header-five': 'h5',\n    'header-six': 'h6',\n    'unordered-list-item': 'ul',\n    'ordered-list-item': 'ol',\n    blockquote: 'blockquote',\n    code: 'pre'\n  };\n  /**\n  * Function will return HTML tag for a block.\n  */\n\n  function getBlockTag(type) {\n    return type && blockTypesMapping[type];\n  }\n  /**\n  * Function will return style string for a block.\n  */\n\n  function getBlockStyle(data) {\n    var styles = '';\n    forEach(data, function (key, value) {\n      if (value) {\n        styles += \"\".concat(key, \":\").concat(value, \";\");\n      }\n    });\n    return styles;\n  }\n  /**\n  * The function returns an array of hashtag-sections in blocks.\n  * These will be areas in block which have hashtags applicable to them.\n  */\n\n  function getHashtagRanges(blockText, hashtagConfig) {\n    var sections = [];\n\n    if (hashtagConfig) {\n      var counter = 0;\n      var startIndex = 0;\n      var text = blockText;\n      var trigger = hashtagConfig.trigger || '#';\n      var separator = hashtagConfig.separator || ' ';\n\n      for (; text.length > 0 && startIndex >= 0;) {\n        if (text[0] === trigger) {\n          startIndex = 0;\n          counter = 0;\n          text = text.substr(trigger.length);\n        } else {\n          startIndex = text.indexOf(separator + trigger);\n\n          if (startIndex >= 0) {\n            text = text.substr(startIndex + (separator + trigger).length);\n            counter += startIndex + separator.length;\n          }\n        }\n\n        if (startIndex >= 0) {\n          var endIndex = text.indexOf(separator) >= 0 ? text.indexOf(separator) : text.length;\n          var hashtag = text.substr(0, endIndex);\n\n          if (hashtag && hashtag.length > 0) {\n            sections.push({\n              offset: counter,\n              length: hashtag.length + trigger.length,\n              type: 'HASHTAG'\n            });\n          }\n\n          counter += trigger.length;\n        }\n      }\n    }\n\n    return sections;\n  }\n  /**\n  * The function returns an array of entity-sections in blocks.\n  * These will be areas in block which have same entity or no entity applicable to them.\n  */\n\n\n  function getSections(block, hashtagConfig) {\n    var sections = [];\n    var lastOffset = 0;\n    var sectionRanges = block.entityRanges.map(function (range) {\n      var offset = range.offset,\n          length = range.length,\n          key = range.key;\n      return {\n        offset: offset,\n        length: length,\n        key: key,\n        type: 'ENTITY'\n      };\n    });\n    sectionRanges = sectionRanges.concat(getHashtagRanges(block.text, hashtagConfig));\n    sectionRanges = sectionRanges.sort(function (s1, s2) {\n      return s1.offset - s2.offset;\n    });\n    sectionRanges.forEach(function (r) {\n      if (r.offset > lastOffset) {\n        sections.push({\n          start: lastOffset,\n          end: r.offset\n        });\n      }\n\n      sections.push({\n        start: r.offset,\n        end: r.offset + r.length,\n        entityKey: r.key,\n        type: r.type\n      });\n      lastOffset = r.offset + r.length;\n    });\n\n    if (lastOffset < block.text.length) {\n      sections.push({\n        start: lastOffset,\n        end: block.text.length\n      });\n    }\n\n    return sections;\n  }\n  /**\n  * Function to check if the block is an atomic entity block.\n  */\n\n\n  function isAtomicEntityBlock(block) {\n    if (block.entityRanges.length > 0 && (isEmptyString(block.text) || block.type === 'atomic')) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n  * The function will return array of inline styles applicable to the block.\n  */\n\n\n  function getStyleArrayForBlock(block) {\n    var text = block.text,\n        inlineStyleRanges = block.inlineStyleRanges;\n    var inlineStyles = {\n      BOLD: new Array(text.length),\n      ITALIC: new Array(text.length),\n      UNDERLINE: new Array(text.length),\n      STRIKETHROUGH: new Array(text.length),\n      CODE: new Array(text.length),\n      SUPERSCRIPT: new Array(text.length),\n      SUBSCRIPT: new Array(text.length),\n      COLOR: new Array(text.length),\n      BGCOLOR: new Array(text.length),\n      FONTSIZE: new Array(text.length),\n      FONTFAMILY: new Array(text.length),\n      length: text.length\n    };\n\n    if (inlineStyleRanges && inlineStyleRanges.length > 0) {\n      inlineStyleRanges.forEach(function (range) {\n        var offset = range.offset;\n        var length = offset + range.length;\n\n        for (var i = offset; i < length; i += 1) {\n          if (range.style.indexOf('color-') === 0) {\n            inlineStyles.COLOR[i] = range.style.substring(6);\n          } else if (range.style.indexOf('bgcolor-') === 0) {\n            inlineStyles.BGCOLOR[i] = range.style.substring(8);\n          } else if (range.style.indexOf('fontsize-') === 0) {\n            inlineStyles.FONTSIZE[i] = range.style.substring(9);\n          } else if (range.style.indexOf('fontfamily-') === 0) {\n            inlineStyles.FONTFAMILY[i] = range.style.substring(11);\n          } else if (inlineStyles[range.style]) {\n            inlineStyles[range.style][i] = true;\n          }\n        }\n      });\n    }\n\n    return inlineStyles;\n  }\n  /**\n  * The function will return inline style applicable at some offset within a block.\n  */\n\n\n  function getStylesAtOffset(inlineStyles, offset) {\n    var styles = {};\n\n    if (inlineStyles.COLOR[offset]) {\n      styles.COLOR = inlineStyles.COLOR[offset];\n    }\n\n    if (inlineStyles.BGCOLOR[offset]) {\n      styles.BGCOLOR = inlineStyles.BGCOLOR[offset];\n    }\n\n    if (inlineStyles.FONTSIZE[offset]) {\n      styles.FONTSIZE = inlineStyles.FONTSIZE[offset];\n    }\n\n    if (inlineStyles.FONTFAMILY[offset]) {\n      styles.FONTFAMILY = inlineStyles.FONTFAMILY[offset];\n    }\n\n    if (inlineStyles.UNDERLINE[offset]) {\n      styles.UNDERLINE = true;\n    }\n\n    if (inlineStyles.ITALIC[offset]) {\n      styles.ITALIC = true;\n    }\n\n    if (inlineStyles.BOLD[offset]) {\n      styles.BOLD = true;\n    }\n\n    if (inlineStyles.STRIKETHROUGH[offset]) {\n      styles.STRIKETHROUGH = true;\n    }\n\n    if (inlineStyles.CODE[offset]) {\n      styles.CODE = true;\n    }\n\n    if (inlineStyles.SUBSCRIPT[offset]) {\n      styles.SUBSCRIPT = true;\n    }\n\n    if (inlineStyles.SUPERSCRIPT[offset]) {\n      styles.SUPERSCRIPT = true;\n    }\n\n    return styles;\n  }\n  /**\n  * Function returns true for a set of styles if the value of these styles at an offset\n  * are same as that on the previous offset.\n  */\n\n  function sameStyleAsPrevious(inlineStyles, styles, index) {\n    var sameStyled = true;\n\n    if (index > 0 && index < inlineStyles.length) {\n      styles.forEach(function (style) {\n        sameStyled = sameStyled && inlineStyles[style][index] === inlineStyles[style][index - 1];\n      });\n    } else {\n      sameStyled = false;\n    }\n\n    return sameStyled;\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n  function addInlineStyleMarkup(style, content) {\n    if (style === 'BOLD') {\n      return \"<strong>\".concat(content, \"</strong>\");\n    }\n\n    if (style === 'ITALIC') {\n      return \"<em>\".concat(content, \"</em>\");\n    }\n\n    if (style === 'UNDERLINE') {\n      return \"<ins>\".concat(content, \"</ins>\");\n    }\n\n    if (style === 'STRIKETHROUGH') {\n      return \"<del>\".concat(content, \"</del>\");\n    }\n\n    if (style === 'CODE') {\n      return \"<code>\".concat(content, \"</code>\");\n    }\n\n    if (style === 'SUPERSCRIPT') {\n      return \"<sup>\".concat(content, \"</sup>\");\n    }\n\n    if (style === 'SUBSCRIPT') {\n      return \"<sub>\".concat(content, \"</sub>\");\n    }\n\n    return content;\n  }\n  /**\n  * The function returns text for given section of block after doing required character replacements.\n  */\n\n  function getSectionText(text) {\n    if (text && text.length > 0) {\n      var chars = text.map(function (ch) {\n        switch (ch) {\n          case '\\n':\n            return '<br>';\n\n          case '&':\n            return '&amp;';\n\n          case '<':\n            return '&lt;';\n\n          case '>':\n            return '&gt;';\n\n          default:\n            return ch;\n        }\n      });\n      return chars.join('');\n    }\n\n    return '';\n  }\n  /**\n  * Function returns html for text depending on inline style tags applicable to it.\n  */\n\n\n  function addStylePropertyMarkup(styles, text) {\n    if (styles && (styles.COLOR || styles.BGCOLOR || styles.FONTSIZE || styles.FONTFAMILY)) {\n      var styleString = 'style=\"';\n\n      if (styles.COLOR) {\n        styleString += \"color: \".concat(styles.COLOR, \";\");\n      }\n\n      if (styles.BGCOLOR) {\n        styleString += \"background-color: \".concat(styles.BGCOLOR, \";\");\n      }\n\n      if (styles.FONTSIZE) {\n        styleString += \"font-size: \".concat(styles.FONTSIZE).concat(/^\\d+$/.test(styles.FONTSIZE) ? 'px' : '', \";\");\n      }\n\n      if (styles.FONTFAMILY) {\n        styleString += \"font-family: \".concat(styles.FONTFAMILY, \";\");\n      }\n\n      styleString += '\"';\n      return \"<span \".concat(styleString, \">\").concat(text, \"</span>\");\n    }\n\n    return text;\n  }\n  /**\n  * Function will return markup for Entity.\n  */\n\n  function getEntityMarkup(entityMap, entityKey, text, customEntityTransform) {\n    var entity = entityMap[entityKey];\n\n    if (typeof customEntityTransform === 'function') {\n      var html = customEntityTransform(entity, text);\n\n      if (html) {\n        return html;\n      }\n    }\n\n    if (entity.type === 'MENTION') {\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(entity.data.value, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'LINK') {\n      var targetOption = entity.data.targetOption || '_self';\n      return \"<a href=\\\"\".concat(entity.data.url, \"\\\" target=\\\"\").concat(targetOption, \"\\\">\").concat(text, \"</a>\");\n    }\n\n    if (entity.type === 'IMAGE') {\n      var alignment = entity.data.alignment;\n\n      if (alignment && alignment.length) {\n        return \"<div style=\\\"text-align:\".concat(alignment, \";\\\"><img src=\\\"\").concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/></div>\");\n      }\n\n      return \"<img src=\\\"\".concat(entity.data.src, \"\\\" alt=\\\"\").concat(entity.data.alt, \"\\\" style=\\\"height: \").concat(entity.data.height, \";width: \").concat(entity.data.width, \"\\\"/>\");\n    }\n\n    if (entity.type === 'EMBEDDED_LINK') {\n      return \"<iframe width=\\\"\".concat(entity.data.width, \"\\\" height=\\\"\").concat(entity.data.height, \"\\\" src=\\\"\").concat(entity.data.src, \"\\\" frameBorder=\\\"0\\\"></iframe>\");\n    }\n\n    return text;\n  }\n  /**\n  * For a given section in a block the function will return a further list of sections,\n  * with similar inline styles applicable to them.\n  */\n\n\n  function getInlineStyleSections(block, styles, start, end) {\n    var styleSections = [];\n    var text = Array.from(block.text);\n\n    if (text.length > 0) {\n      var inlineStyles = getStyleArrayForBlock(block);\n      var section;\n\n      for (var i = start; i < end; i += 1) {\n        if (i !== start && sameStyleAsPrevious(inlineStyles, styles, i)) {\n          section.text.push(text[i]);\n          section.end = i + 1;\n        } else {\n          section = {\n            styles: getStylesAtOffset(inlineStyles, i),\n            text: [text[i]],\n            start: i,\n            end: i + 1\n          };\n          styleSections.push(section);\n        }\n      }\n    }\n\n    return styleSections;\n  }\n  /**\n  * Replace leading blank spaces by &nbsp;\n  */\n\n\n  function trimLeadingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = 0; i < replacedText.length; i += 1) {\n        if (sectionText[i] === ' ') {\n          replacedText = replacedText.replace(' ', '&nbsp;');\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * Replace trailing blank spaces by &nbsp;\n  */\n\n  function trimTrailingZeros(sectionText) {\n    if (sectionText) {\n      var replacedText = sectionText;\n\n      for (var i = replacedText.length - 1; i >= 0; i -= 1) {\n        if (replacedText[i] === ' ') {\n          replacedText = \"\".concat(replacedText.substring(0, i), \"&nbsp;\").concat(replacedText.substring(i + 1));\n        } else {\n          break;\n        }\n      }\n\n      return replacedText;\n    }\n\n    return sectionText;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  * like BOLD, ITALIC, UNDERLINE, STRIKETHROUGH, CODE, SUPERSCRIPT, SUBSCRIPT are applicable.\n  */\n\n  function getStyleTagSectionMarkup(styleSection) {\n    var styles = styleSection.styles,\n        text = styleSection.text;\n    var content = getSectionText(text);\n    forEach(styles, function (style, value) {\n      content = addInlineStyleMarkup(style, content);\n    });\n    return content;\n  }\n  /**\n  * The method returns markup for section to which inline styles\n  like color, background-color, font-size are applicable.\n  */\n\n\n  function getInlineStyleSectionMarkup(block, styleSection) {\n    var styleTagSections = getInlineStyleSections(block, ['BOLD', 'ITALIC', 'UNDERLINE', 'STRIKETHROUGH', 'CODE', 'SUPERSCRIPT', 'SUBSCRIPT'], styleSection.start, styleSection.end);\n    var styleSectionText = '';\n    styleTagSections.forEach(function (stylePropertySection) {\n      styleSectionText += getStyleTagSectionMarkup(stylePropertySection);\n    });\n    styleSectionText = addStylePropertyMarkup(styleSection.styles, styleSectionText);\n    return styleSectionText;\n  }\n  /*\n  * The method returns markup for an entity section.\n  * An entity section is a continuous section in a block\n  * to which same entity or no entity is applicable.\n  */\n\n\n  function getSectionMarkup(block, entityMap, section, customEntityTransform) {\n    var entityInlineMarkup = [];\n    var inlineStyleSections = getInlineStyleSections(block, ['COLOR', 'BGCOLOR', 'FONTSIZE', 'FONTFAMILY'], section.start, section.end);\n    inlineStyleSections.forEach(function (styleSection) {\n      entityInlineMarkup.push(getInlineStyleSectionMarkup(block, styleSection));\n    });\n    var sectionText = entityInlineMarkup.join('');\n\n    if (section.type === 'ENTITY') {\n      if (section.entityKey !== undefined && section.entityKey !== null) {\n        sectionText = getEntityMarkup(entityMap, section.entityKey, sectionText, customEntityTransform); // eslint-disable-line max-len\n      }\n    } else if (section.type === 'HASHTAG') {\n      sectionText = \"<a href=\\\"\".concat(sectionText, \"\\\" class=\\\"wysiwyg-hashtag\\\">\").concat(sectionText, \"</a>\");\n    }\n\n    return sectionText;\n  }\n  /**\n  * Function will return the markup for block preserving the inline styles and\n  * special characters like newlines or blank spaces.\n  */\n\n\n  function getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform) {\n    var blockMarkup = [];\n    var sections = getSections(block, hashtagConfig);\n    sections.forEach(function (section, index) {\n      var sectionText = getSectionMarkup(block, entityMap, section, customEntityTransform);\n\n      if (index === 0) {\n        sectionText = trimLeadingZeros(sectionText);\n      }\n\n      if (index === sections.length - 1) {\n        sectionText = trimTrailingZeros(sectionText);\n      }\n\n      blockMarkup.push(sectionText);\n    });\n    return blockMarkup.join('');\n  }\n  /**\n  * Function will return html for the block.\n  */\n\n  function getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var blockHtml = [];\n\n    if (isAtomicEntityBlock(block)) {\n      blockHtml.push(getEntityMarkup(entityMap, block.entityRanges[0].key, undefined, customEntityTransform));\n    } else {\n      var blockTag = getBlockTag(block.type);\n\n      if (blockTag) {\n        blockHtml.push(\"<\".concat(blockTag));\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          blockHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          blockHtml.push(' dir = \"auto\"');\n        }\n\n        blockHtml.push('>');\n        blockHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        blockHtml.push(\"</\".concat(blockTag, \">\"));\n      }\n    }\n\n    blockHtml.push('\\n');\n    return blockHtml.join('');\n  }\n\n  /**\n  * Function to check if a block is of type list.\n  */\n\n  function isList(blockType) {\n    return blockType === 'unordered-list-item' || blockType === 'ordered-list-item';\n  }\n  /**\n  * Function will return html markup for a list block.\n  */\n\n  function getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform) {\n    var listHtml = [];\n    var nestedListBlock = [];\n    var previousBlock;\n    listBlocks.forEach(function (block) {\n      var nestedBlock = false;\n\n      if (!previousBlock) {\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.type !== block.type) {\n        listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n        listHtml.push(\"<\".concat(getBlockTag(block.type), \">\\n\"));\n      } else if (previousBlock.depth === block.depth) {\n        if (nestedListBlock && nestedListBlock.length > 0) {\n          listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n          nestedListBlock = [];\n        }\n      } else {\n        nestedBlock = true;\n        nestedListBlock.push(block);\n      }\n\n      if (!nestedBlock) {\n        listHtml.push('<li');\n        var blockStyle = getBlockStyle(block.data);\n\n        if (blockStyle) {\n          listHtml.push(\" style=\\\"\".concat(blockStyle, \"\\\"\"));\n        }\n\n        if (directional) {\n          listHtml.push(' dir = \"auto\"');\n        }\n\n        listHtml.push('>');\n        listHtml.push(getBlockInnerMarkup(block, entityMap, hashtagConfig, customEntityTransform));\n        listHtml.push('</li>\\n');\n        previousBlock = block;\n      }\n    });\n\n    if (nestedListBlock && nestedListBlock.length > 0) {\n      listHtml.push(getListMarkup(nestedListBlock, entityMap, hashtagConfig, directional, customEntityTransform));\n    }\n\n    listHtml.push(\"</\".concat(getBlockTag(previousBlock.type), \">\\n\"));\n    return listHtml.join('');\n  }\n\n  /**\n  * The function will generate html markup for given draftjs editorContent.\n  */\n\n  function draftToHtml(editorContent, hashtagConfig, directional, customEntityTransform) {\n    var html = [];\n\n    if (editorContent) {\n      var blocks = editorContent.blocks,\n          entityMap = editorContent.entityMap;\n\n      if (blocks && blocks.length > 0) {\n        var listBlocks = [];\n        blocks.forEach(function (block) {\n          if (isList(block.type)) {\n            listBlocks.push(block);\n          } else {\n            if (listBlocks.length > 0) {\n              var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, customEntityTransform); // eslint-disable-line max-len\n\n              html.push(listHtml);\n              listBlocks = [];\n            }\n\n            var blockHtml = getBlockMarkup(block, entityMap, hashtagConfig, directional, customEntityTransform);\n            html.push(blockHtml);\n          }\n        });\n\n        if (listBlocks.length > 0) {\n          var listHtml = getListMarkup(listBlocks, entityMap, hashtagConfig, directional, customEntityTransform); // eslint-disable-line max-len\n\n          html.push(listHtml);\n          listBlocks = [];\n        }\n      }\n    }\n\n    return html.join('');\n  }\n\n  return draftToHtml;\n\n})));\n"],"sourceRoot":""}